version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: healthgig-postgres
    environment:
      POSTGRES_DB: healthgig
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: healthgig-backend
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: healthgig
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: your_jwt_secret_here_change_in_production
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - ~/.m2:/root/.m2
    command: ./mvnw spring-boot:run -Dspring-boot.run.profiles=dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: healthgig-frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data: